plugins:
- rubocop-rake
- rubocop-rspec
AllCops:
  TargetRubyVersion: 2.7
  NewCops: enable
Gemspec/RequireMFA:
  Enabled: false
Layout/ArgumentAlignment:
  EnforcedStyle: with_fixed_indentation
Layout/CaseIndentation:
  EnforcedStyle: end
Layout/EndOfLine:
  EnforcedStyle: lf
Layout/EmptyLineAfterGuardClause:
  Enabled: false # reason: unnecessary extra space
Layout/HeredocIndentation:
  Enabled: false # reason: makes it harder to understand what indentation is significant
Layout/LeadingCommentSpace:
  Enabled: false # reason: this is just nitpicky
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented
Layout/MultilineOperationIndentation:
  EnforcedStyle: indented
Layout/ParameterAlignment:
  EnforcedStyle: with_fixed_indentation
  IndentationWidth: 4
Layout/SpaceInsideBlockBraces:
  SpaceBeforeBlockParameters: false
Lint/AmbiguousOperatorPrecedence:
  Enabled: false
Lint/EmptyWhen:
  Enabled: false # reason: an empty when can be important for excluding matches
Lint/ParenthesesAsGroupedExpression:
  Enabled: false # reason: we prefer to enclose assignments
Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/BlockNesting:
  Max: 10
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
Metrics/ParameterLists:
  Max: 10
  MaxOptionalParameters: 10
Metrics/PerceivedComplexity:
  Enabled: false
Naming/ConstantName:
  Enabled: false # FIXME consider reenabling
Naming/FileName:
  Enabled: true
  Exclude: [ lib/asciidoctor-reducer.rb ]
Naming/HeredocDelimiterNaming:
  Enabled: true
  ForbiddenDelimiters:
  - !ruby/regexp '/^\s*EO[A-Z]\s*$/'
Naming/VariableNumber:
  Enabled: false # reason: this is just nitpicky
RSpec:
  Language:
    ExampleGroups:
      Regular:
      - describe_method
RSpec/BeEql:
  Enabled: false # NOTE can lead to cryptic error messages when comparing integers
RSpec/ContextWording:
  Enabled: false
RSpec/DescribeClass:
  Enabled: false
RSpec/ExampleLength:
  Enabled: false
RSpec/ExampleWording:
  Enabled: false
RSpec/SpecFilePathFormat:
  Enabled: false
RSpec/MultipleExpectations:
  Enabled: true
  Max: 15
RSpec/NamedSubject:
  Enabled: false
RSpec/NoExpectationExample:
  Enabled: false
RSpec/VoidExpect:
  Enabled: false
Style/AccessorGrouping:
  Enabled: true
  EnforcedStyle: separated
Style/Alias:
  Enabled: true
  EnforcedStyle: prefer_alias
Style/ArrayCoercion:
  Enabled: false # reason: using [*values] is faster
Style/AsciiComments:
  Enabled: false # reason: this is just nitpicky
Style/BlockDelimiters:
  EnforcedStyle: line_count_based # FIXME we want this to be line_count_based except when chaining
Style/CaseEquality:
  Enabled: false # reason: === is a useful operator
Style/CharacterLiteral:
  Enabled: false # reason: ? can make single characters easier to type
Style/ClassAndModuleChildren:
  Enabled: false # reason: both forms are useful
Style/ClassVars:
  Enabled: false # reason: an important language feature
Style/CommandLiteral:
  EnforcedStyle: percent_x
Style/CommentAnnotation:
  Enabled: true
  Keywords:
  - TODO
  - FIXME
  - HACK
  - NOTE
  - QUESTION
  RequireColon: false
Style/ConditionalAssignment:
  EnforcedStyle: assign_inside_condition
  IncludeTernaryExpressions: false
Style/Documentation:
  Enabled: false # FIXME reenable
Style/ExplicitBlockArgument:
  Enabled: false # reason: yield is fine
Style/FetchEnvVar:
  Enabled: false # reason: just no
Style/FormatString:
  EnforcedStyle: sprintf
Style/FormatStringToken:
  Enabled: true
  EnforcedStyle: unannotated
Style/HashAsLastArrayItem:
  Enabled: true
  EnforcedStyle: no_braces
Style/HashSyntax:
  EnforcedStyle: ruby19
Style/IfWithBooleanLiteralBranches:
  Enabled: true
  AllowedMethods:
  - empty?
Style/IfUnlessModifier:
  Enabled: false # reason: this gets crazy
Style/IfUnlessModifierOfIfUnless:
  Enabled: false # reason: we prefer this style to avoid extra nesting
Style/InfiniteLoop:
  Enabled: false # reason: loop is measurably slower than while true
Style/MapToHash:
  Enabled: false # reason: not supported in JRuby < 9.3
Style/MethodCallWithArgsParentheses:
  Enabled: true
  EnforcedStyle: omit_parentheses
Style/MethodDefParentheses:
  EnforcedStyle: require_no_parentheses
Style/MultilineBlockChain:
  Enabled: false # reason: no reason not to allow method call on block result
Style/MultilineIfModifier:
  Enabled: false # reason: we prefer this style to avoid extra nesting
Style/MultilineTernaryOperator:
  Enabled: false # reason: a ternary is a ternary
Style/MultipleComparison:
  Enabled: false # reason: faster than the alternative of using Array#include?
Style/MutableConstant:
  Enabled: false # reason: freezing constants is pendantic
Style/NestedTernaryOperator:
  Enabled: false # reason: a ternary is a ternary
Style/NumericLiterals:
  Enabled: false # reason: makes large numbers unreadable and harder to copy
Style/NumericPredicate:
  EnforcedStyle: comparison
Style/OptionalBooleanParameter:
  Enabled: false # reason: invasive
Style/ParallelAssignment:
  Enabled: false # reason: an important language feature
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    default: "()"
    "%i": "()"
    "%r": "//"
    "%w": "()"
    "%W": "()"
Style/PerlBackrefs:
  Enabled: false # reason: an important language feature
Style/RedundantHeredocDelimiterQuotes:
  Enabled: false # reason: it doesn't supported single-quoted form
Style/RedundantSelfAssignmentBranch:
  Enabled: false
Style/RegexpLiteral:
  Enabled: true
  Exclude: [ test/*.rb ]
Style/RescueModifier:
  Enabled: false # reason: a useful language feature
Style/RescueStandardError:
  EnforcedStyle: implicit
Style/SlicingWithRange:
  Enabled: false # reason: not supported in JRuby < 9.3
Style/SpecialGlobalVars:
  EnforcedStyle: use_perl_names
Style/StderrPuts:
  Enabled: true
  Exclude: [ lib/asciidoctor/reducer/cli.rb ]
Style/StringConcatenation:
  Enabled: false # reason: string concatenation can be faster
Style/SymbolArray:
  EnforcedStyle: brackets
Style/SymbolProc:
  Enabled: false # reason: using a symbol proc is measurably slower than using a block in Opal and Ruby < 3
Style/TernaryParentheses:
  Enabled: true
  EnforcedStyle: require_no_parentheses
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: consistent_comma
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: consistent_comma
